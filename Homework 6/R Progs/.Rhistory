c1<-c(25.3,32.1,38.8,25.4)
c2<-c(25.3,29.1,31.0,21.1)
c3<-c(18.2,18.8,19.3,20.3)
c4<-c(18.3,24.3,15.7,24.0)
c5<-c(16.3,19.0,16.8,17.5)
mat<-cbind(c1,c2,c3,c4,c5)
retColMedian<-function(mat){
n<-nrow(mat)
for(i in 1:ncol(mat)){
if(i==1){
med<-cbind(rep(median(mat[,i]),n))
}else{
#print(median(mat[,i]))
med<-cbind(med,rep(median(mat[,i]),n))
}
}
#print(med)
med
}
retRowMedian<-function(mat){
n<-ncol(mat)
for(i in 1:nrow(mat)){
if(i==1){
med<-rbind(rep(median(mat[i,]),n))
}else{
#print(median(mat[,i]))
med<-rbind(med,rep(median(mat[i,]),n))
}
}
#print(med)
med
}
subtractCol<-function(matrix,medianmat){
x<-matrix-medianmat
print(x)
x
}
medianPolishCol<-function(mat,n){
rowEffect<-cbind(c(rep(0,nrow(mat))))
colEffect<-rbind(c(rep(0,ncol(mat))))
mat1<-mat
for(i in 1:n){
col<-retColMedian(mat1)
print(currcolEffect<-rbind(col[1,]))
print(colEffect<-colEffect+currcolEffect)
mat1<-subtractCol(mat1,retColMedian(mat1))
row<-retRowMedian(mat1)
print(currRowEffect<-cbind(row[,1]))
print(rowEffect<-rowEffect+currRowEffect)
mat1<-subtractCol(mat1,retRowMedian(mat1))
}
mat1
}
medianPolishRow<-function(mat,n){
rowEffect<-cbind(c(rep(0,nrow(mat))))
colEffect<-rbind(c(rep(0,ncol(mat))))
overEffect<-c()
mat1<-mat
overall<-c()
for(i in 1:n){
row<-retRowMedian(mat1)
print(currRowEffect<-cbind(row[,1]))
temp<-median(currRowEffect)
overEffect<-overEffect+temp;
print(rowEffect<-((rowEffect+currRowEffect)-overEffect))
mat1<-subtractCol(mat1,retRowMedian(mat1))
col<-retColMedian(mat1)
print(currcolEffect<-rbind(col[1,]))
temp<-median(currcolEffect)
overEffect<-overEffect+temp;
print(colEffect<-((colEffect+currcolEffect)-overEffect))
mat1<-subtractCol(mat1,retColMedian(mat1))
}
mat1
}
lv<-medianPolishRow(mat,2)
stem(c(lv),2)
c1<-c(25.3,32.1,38.8,25.4)
c2<-c(25.3,29.1,31.0,21.1)
c3<-c(18.2,18.8,19.3,20.3)
c4<-c(18.3,24.3,15.7,24.0)
c5<-c(16.3,19.0,16.8,17.5)
mat<-cbind(c1,c2,c3,c4,c5)
retColMedian<-function(mat){
n<-nrow(mat)
for(i in 1:ncol(mat)){
if(i==1){
med<-cbind(rep(median(mat[,i]),n))
}else{
#print(median(mat[,i]))
med<-cbind(med,rep(median(mat[,i]),n))
}
}
#print(med)
med
}
retRowMedian<-function(mat){
n<-ncol(mat)
for(i in 1:nrow(mat)){
if(i==1){
med<-rbind(rep(median(mat[i,]),n))
}else{
#print(median(mat[,i]))
med<-rbind(med,rep(median(mat[i,]),n))
}
}
#print(med)
med
}
subtractCol<-function(matrix,medianmat){
x<-matrix-medianmat
print(x)
x
}
medianPolishCol<-function(mat,n){
rowEffect<-cbind(c(rep(0,nrow(mat))))
colEffect<-rbind(c(rep(0,ncol(mat))))
mat1<-mat
for(i in 1:n){
col<-retColMedian(mat1)
print(currcolEffect<-rbind(col[1,]))
print(colEffect<-colEffect+currcolEffect)
mat1<-subtractCol(mat1,retColMedian(mat1))
row<-retRowMedian(mat1)
print(currRowEffect<-cbind(row[,1]))
print(rowEffect<-rowEffect+currRowEffect)
mat1<-subtractCol(mat1,retRowMedian(mat1))
}
mat1
}
medianPolishRow<-function(mat,n){
rowEffect<-cbind(c(rep(0,nrow(mat))))
colEffect<-rbind(c(rep(0,ncol(mat))))
overEffect<-c()
mat1<-mat
overall<-0
for(i in 1:n){
row<-retRowMedian(mat1)
print(currRowEffect<-cbind(row[,1]))
temp<-median(currRowEffect)
overEffect<-overEffect+temp;
print(rowEffect<-((rowEffect+currRowEffect)-overEffect))
mat1<-subtractCol(mat1,retRowMedian(mat1))
col<-retColMedian(mat1)
print(currcolEffect<-rbind(col[1,]))
temp<-median(currcolEffect)
overEffect<-overEffect+temp;
print(colEffect<-((colEffect+currcolEffect)-overEffect))
mat1<-subtractCol(mat1,retColMedian(mat1))
}
mat1
}
lv<-medianPolishRow(mat,2)
stem(c(lv),2)
twoway.median2 <- function(mat){ # first column then row
meff.MP <- median(mat)
beff.MP <- apply(mat,2,median,na.rm=T)  # column medians
mat.res <- mat - matrix(rep(beff.MP,each=nrow(mat)),byrow=F,nrow=nrow(mat));
aeff.MP <- apply(mat.res,1,median,na.rm=T) # row effect
beff.MP <- beff.MP - median(beff.MP)  # column effect
res.MP <- mat.res - matrix(rep(aeff.MP,each=ncol(mat)),byrow=T,ncol=ncol(mat))
list(overall=meff.MP, row=aeff.MP, col=beff.MP, res=res.MP)
}
lv1<-twoway.median2(mat)
c1<-c(25.3,32.1,38.8,25.4)
c2<-c(25.3,29.1,31.0,21.1)
c3<-c(18.2,18.8,19.3,20.3)
c4<-c(18.3,24.3,15.7,24.0)
c5<-c(16.3,19.0,16.8,17.5)
mat<-cbind(c1,c2,c3,c4,c5)
lv1<-twoway.median2(mat)
c1<-c(25.3,32.1,38.8,25.4)
c2<-c(25.3,29.1,31.0,21.1)
c3<-c(18.2,18.8,19.3,20.3)
c4<-c(18.3,24.3,15.7,24.0)
c5<-c(16.3,19.0,16.8,17.5)
mat<-cbind(c1,c2,c3,c4,c5)
twoway.median2 <- function(mat){ # first column then row
meff.MP <- median(mat)
beff.MP <- apply(mat,2,median,na.rm=T)  # column medians
mat.res <- mat - matrix(rep(beff.MP,each=nrow(mat)),byrow=F,nrow=nrow(mat));
aeff.MP <- apply(mat.res,1,median,na.rm=T) # row effect
beff.MP <- beff.MP - median(beff.MP)  # column effect
res.MP <- mat.res - matrix(rep(aeff.MP,each=ncol(mat)),byrow=T,ncol=ncol(mat))
list(overall=meff.MP, row=aeff.MP, col=beff.MP, res=res.MP)
}
lv1<-twoway.median2(mat)
lv1
lv2<-twoway.median2(lv1$res)
lv2
stem(c(lv),2)
stem(c(lv2$res),2)
c1<-c(25.3,32.1,38.8,25.4)
c2<-c(25.3,29.1,31.0,21.1)
c3<-c(18.2,18.8,19.3,20.3)
c4<-c(18.3,24.3,15.7,24.0)
c5<-c(16.3,19.0,16.8,17.5)
mat<-cbind(c1,c2,c3,c4,c5)
twoway.median2 <- function(mat){ # first column then row
meff.MP <- median(mat)
beff.MP <- apply(mat,2,median,na.rm=T)  # column medians
mat.res <- mat - matrix(rep(beff.MP,each=nrow(mat)),byrow=F,nrow=nrow(mat));
aeff.MP <- apply(mat.res,1,median,na.rm=T) # row effect
beff.MP <- beff.MP - median(beff.MP)  # column effect
res.MP <- mat.res - matrix(rep(aeff.MP,each=ncol(mat)),byrow=T,ncol=ncol(mat))
list(overall=meff.MP, row=aeff.MP, col=beff.MP, res=res.MP)
}
lv1<-twoway.median2(mat)
lv1
lv2<-twoway.median2(lv1$res)
lv2
stem(c(lv2$res),2)
diag.MP <- function(fit){
fit.comp <- matrix(fit$row,ncol=1) %*% matrix(fit$col,nrow=1)/fit$overall
plot(fit.comp, fit$res,xlab="Comparison value",ylab="Residual",cex=0.5)
abline(v=0,h=0,lty=2)
ls <- lm(c(fit$res)~c(fit.comp))
abline(ls,col="red",lty=3)
rr <- run.rrline(fit.comp,fit$res,iter=10)
abline(rr$a, rr$b, col="red")
pwr1 <- 1 - rr$b
pwr2 <- 1 - ls$coef[2]
title("",paste("Approximate power =",format(round(pwr1,2))," or ", format(round(pwr2,2))))
}
symbolPlot<-function(mat){
result<-medpolish(mat)
res<-c(result$residuals)
genNos<-expand.grid(1:5,1:5)
plotvar<-cbind(genNos$Var2,genNos$Var1,res)
pos<-plotvar[plotvar[,3]>=0,]
max<-sum(abs(pos[,3]))
symbols(pos[,1],pos[,2],squares = 0.2*(abs(pos[,3]/(max))),inches = FALSE,xlab="Columns",ylab="Rows",main="Symbol Plot")
pos<-plotvar[plotvar[,3]<0,]
symbols(pos[,1],pos[,2],circles = 0.2*(abs(pos[,3]/(max))),inches = FALSE,add = TRUE)
}
libary(ggplot2)
install.packages("riverplot")
library(riverplot)
data("minard")
minard
View(minard)
minard$edges
nodes<-minard$nodes
edges<-minard$edges
riverplot(nodes,edges)
edges$col <- c( "#e5cbaa", "black" )[ factor( edges$direction ) ]
edges$edgecol <- "col"
river <- makeRiver( nodes, edges )
library( riverplot )
data( minard )
nodes <- minard$nodes
edges <- minard$edges
colnames( nodes ) <- c( "ID", "x", "y" )
colnames( edges ) <- c( "N1", "N2", "Value", "direction" )
# color the edges by troop movement direction
edges$col <- c( "#e5cbaa", "black" )[ factor( edges$direction ) ]
# color edges by their color rather than by gradient between the nodes
edges$edgecol <- "col"
# generate the riverplot object
river <- makeRiver( nodes, edges )
style <- list( edgestyle= "straight", nodestyle= "invisible" )
# plot the generated object
plot( river, lty= 1, default.style= style )
plot( river, lty= 1, default.style= style )
plot( river, lty= 1)
style <- list( edgestyle= "straight", nodestyle= "invisible" )
# plot the generated object
plot( river, lty= 1)
library(RMySQL)
library(ggplot2)
mydb = dbConnect(MySQL(), user='bususer', password='Password123', dbname='iubus', host='rdc04.uits.iu.edu',port='3099')
rs = dbSendQuery(mydb, "select * from route_run_temp")
?"dbConnect
""
?"dbConnect"
?dbConnect
mydb = dbConnect(MySQL(), user='bususer', password='Password123', dbname='iubus', host='rdc04.uits.iu.edu',port='3099')
mydb = dbConnect(MySQL(), user='bususer', password='Password123', dbname='iubus', host='rdc04.uits.iu.edu',port=3099)
rs = dbSendQuery(mydb, "select * from route_run_temp")
data = fetch(rs, n=-1)
qplot(route_id,dwell_time,data=data,facets = from_stp)
qplot(route_id,dwell_time,data=data,facets = from_stp~.)
ggsave(file="d:\\test.png")
data1<-data[which(data$dwelltime>0),]
data[which(data$dwelltime>0),]
data1<-data[which(data$dwell_time=0),]
data1<-data[which(data$dwell_time==0),]
qplot(route_id,dwell_time,data=data1,facets = from_stp ~.)
qplot(route_id,dwell_time,data=data1,facets = from_stp ~.)+geom_line()
ggsave(file="d:\\test.png",width = 100,length=100)
ggsave(file="d:\\test.png",width = 50,length=50)
ggsave(file="d:\\test.png",width = 49,length=49)
ggsave(file="d:\\test.png",width = 49,height=49)
data1<-data[which(!data$dwell_time==0),]
qplot(route_id,dwell_time,data=data1,facets = from_stp ~.)
ggsave(file="D:\\test.png",height=49.width=49)
ggsave(file="D:\\test.png",height=49,width=49)
qplot(route_id,dwell_time,data=data1,facets = from_stp ~.,ylim=100)
qplot(route_id,dwell_time,data=data1,facets = from_stp ~.,ylim=c(0,100))
ggsave(file="D:\\test.png",height=49,width=49)
qplot(dwell_time,route_id,data=data1,facets = from_stp ~.,ylim=c(0,100))
rs = dbSendQuery(mydb, "select from_stp,avg(dwell_time) 'dwell_time' from route_run_temp where dwell_time <> 0 group by from_stp order by dwell_time")
data = fetch(rs, n=-1)
library(RMySQL)
library(ggplot2)
mydb = dbConnect(MySQL(), user='bususer', password='Password123', dbname='iubus', host='rdc04.uits.iu.edu',port=3099)
rs = dbSendQuery(mydb, "select from_stp,avg(dwell_time) 'dwell_time' from route_run_temp where dwell_time <> 0 group by from_stp order by dwell_time")
data = fetch(rs, n=-1)
dbDisconnect()
ggplot(x=from_stp,y=dwell_time,data=data)+stat_identity()
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp))+stat_summary(fun.y="mean",geom="bar")
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp))+stat_summary(fun.y="mean",geom="bar")+opts(axis.text.x=theme_text(angle=-90))
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
rs = dbSendQuery(mydb, "select from_stp,avg(dwell_time) 'dwell_time',route_id from route_run_temp where dwell_time <> 0 group by from_stp,route_id order by route_id")
data = fetch(rs, n=-1)
dbDisconnect()
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp,facet=route_id~.)+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
)
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp,facet=route_id~.))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp,facets=route_id~.))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp)facets=route_id~.)+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp))+facet_grid(route_id~.)+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp),ylim(0,100))+facet_grid(route_id~.)+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp),ylim=c(0,100))+facet_grid(route_id~.)+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp),ylim(0,100))+facet_grid(route_id~.)+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
ylim(10,20)
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp),ylim(0,100))+facet_grid(route_id~.)+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
ggplot(data,aes(x=from_stp,y=dwell_time,color=from_stp,fill=from_stp))+ylim(0,100)+facet_grid(route_id~.)+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
dbDisconnect(mydb)
rs = dbSendQuery(mydb, "select from_stp,to_stp,avg(travel_time) 'travel_time',route_id from route_run_temp where travel_time <> 0 group by from_stp,route_id order by route_id")
data = fetch(rs, n=-1)
mydb = dbConnect(MySQL(), user='bususer', password='Password123', dbname='iubus', host='rdc04.uits.iu.edu',port=3099)
rs = dbSendQuery(mydb, "select from_stp,to_stp,avg(travel_time) 'travel_time',route_id from route_run_temp where travel_time <> 0 group by from_stp,route_id order by route_id")
data = fetch(rs, n=-1)
ggplot(data,aes(x=from_stp,y=to_stp))
View(data)
print(data)
library(RMySQL)
library(ggplot2)
mydb = dbConnect(MySQL(), user='bususer', password='Password123', dbname='iubus', host='rdc04.uits.iu.edu',port=3099)
rs = dbSendQuery(mydb, "select from_name,avg(dwell_time),hour(timestmp) 'hour_time' from W_SHED_RUN_FS where travel_flg='N' group by from_name,hour_time order by hour_time")
data = fetch(rs, n=-1)
dbDisconnect(mydb)
mydb = dbConnect(MySQL(), user='bususer', password='Password123', dbname='iubus', host='rdc04.uits.iu.edu',port=3099)
rs = dbSendQuery(mydb, "select from_name,avg(dwell_time) 'avg_time',hour(timestmp) 'hour_time' from W_SHED_RUN_FS where travel_flg='N' group by from_name,hour_time order by hour_time;")
data = fetch(rs, n=-1)
dbDisconnect(mydb)
data$hour_time<-as.factor(data$hour_time)
levels(data$hour_time)
for(i in lvl){
print(i)
}
lvl<-levels(data$hour_time)
for(i in lvl){
print(i)
}
for(i in lvl){
tmpDs<-data[which(data$hour_time=i),]
print(tmpDs)
}
for(i in lvl){
tmpDs<-data[which(data$hour_time==i),]
print(tmpDs)
}
data$avg_time[data$avg_time>300]<-300
mydb = dbConnect(MySQL(), user='bususer', password='Password123', dbname='iubus', host='rdc04.uits.iu.edu',port=3099)
rs = dbSendQuery(mydb, "select route_name,from_name,to_name,concat(from_name,concat('~',to_name)) 'fromtostops',avg(travel_time) 'avg_time',hour(timestmp) 'hour_time' from W_SHED_RUN_FS where travel_flg='Y' group by route_name,fromtostops,hour_time order by route_name,hour_time;")
data = fetch(rs, n=-1)
dbDisconnect(mydb)
View(data)
tmpDs<-data[which(data$hour_time==lvl[1] && data$route_name==routes[1]),]
ggplot(data,aes(x=fromtostops,y=avg_time,color=fromtostops,fill=fromtostops))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none") + ggtitle(paste("Travel Time Patterns for the route ",j," at ",i,"th Hour of the Day"))+xlab("Stop sequence")+ylab("Average Travel Time")
ggplot(data,aes(x=fromtostops,y=avg_time,color=fromtostops,fill=fromtostops))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none") +
)
ggplot(data,aes(x=fromtostops,y=avg_time,color=fromtostops,fill=fromtostops))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
ggplot(tmpds,aes(x=fromtostops,y=avg_time,color=fromtostops,fill=fromtostops))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
ggplot(tmpDs,aes(x=fromtostops,y=avg_time,color=fromtostops,fill=fromtostops))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
which(data$hour_time==lvl[1]
which(data$hour_time==lvl[1] && data$route_name==routes[1])
which(data$hour_time==lvl[1] && data$route_name==routes[1])
which(data$hour_time==lvl[1] && data$route_name==routes[1])
routes<-levels(route_name)
routes<-levels(data$route_name)
which(data$hour_time==lvl[1] && data$route_name==routes[1])
which(data$hour_time==lvl[1] & data$route_name==routes[1])
routes[1]
routes[10]
routes[100]
data$route_name<-as.factor(data$route_name)
routes<-levels(data$route_name)
data$route_name==routes[1]
data$hour_time==lvl[1]
data$hour_time==lvl[1] && data$route_name==routes[1]
data$hour_time==lvl[1] & data$route_name==routes[1]
data$hour_time==lvl[1] & data$route_name==routes[1]
which(data$hour_time==lvl[1] & data$route_name==routes[1])
which(data$hour_time==lvl[1] & data$route_name==routes[1])
which(data$hour_time==lvl[1] & data$route_name==routes[1])
which(data$hour_time==lvl[1] & data$route_name==routes[1])
which((data$hour_time==lvl[1] & data$route_name==routes[1]))
which(FALSE,TRUE)
tmpDs<-data[which((data$hour_time==lvl[1] & data$route_name==routes[1])),]
tmpDs<-data[(data$hour_time==lvl[1] & data$route_name==routes[1]),]
(data$hour_time==lvl[1] & data$route_name==routes[1])
tmpDs<-data[which(data$hour_time==lvl[1] & data$route_name==routes[1]),]
data[TRUE,]
data[TRUE,FALSE,]
data[c(TRUE,FALSE),]
data[c(TRUE,FALSE),]
data[c(TRUE,FALSE),]
data[c(TRUE,FALSE),1]
tmpDs<-data[which(data$hour_time==lvl[1]),]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[1]))]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[1]),]
tmpDs<-data[which(data$hour_time==lvl[1]),]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[100]),]
tmpDs<-data[which(data$hour_time==lvl[1]),]
tmpDs<-data[which(data$hour_time==lvl[2]),]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[100]),]
tmpDs<-data[which(data$hour_time==lvl[2]),]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[22]),]
tmpDs<-data[which(data$hour_time==lvl[2]),]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[1]),]
tmpDs<-data[which(data$hour_time==lvl[18]),]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[1]),]
tmpDs<-data[which(data$hour_time==lvl[18]),]
tmpDs<-tmpDs[which(tmpDs$route_name==as.factor(routes[1])),]
tmpDs<-tmpDs[which(to.character(tmpDs$route_name)==routes[1]),]
tmpDs<-tmpDs[which(to.char(tmpDs$route_name)==routes[1]),]
tmpDs<-tmpDs[which(as.character(tmpDs$route_name)==routes[1]),]
library(RMySQL)
library(ggplot2)
mydb = dbConnect(MySQL(), user='bususer', password='Password123', dbname='iubus', host='rdc04.uits.iu.edu',port=3099)
rs = dbSendQuery(mydb, "select route_name,from_name,to_name,concat(from_name,concat('~',to_name)) 'fromtostops',avg(travel_time) 'avg_time',hour(timestmp) 'hour_time' from W_SHED_RUN_FS where travel_flg='Y' group by route_name,fromtostops,hour_time order by route_name,hour_time;")
data = fetch(rs, n=-1)
dbDisconnect(mydb)
data$hour_time<-as.factor(data$hour_time)
data$hour_time<-as.factor(data$hour_time)
lvl<-levels(data$hour_time)
routes<-levels(as.factor(data$route_name))
tmpDs<-data[which(data$hour_time==lvl[18]),]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[1]),]
tmpDs<-data[which(data$hour_time==lvl[18]),]
View(tmpDs)
routes
tmpDs<-data[which(data$hour_time==lvl[18]),]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[7]),]
routes[7]
tmpDs<-data[which(data$hour_time==lvl[18]),]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[4]),]
tmpDs<-data[which(data$hour_time==lvl[18]),]
View(tmpDs)
tmpDs<-data[which(data$hour_time==lvl[18]),]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[6]),]
tmpDs<-data[which(data$hour_time==lvl[18] & data$route_name==routes[6]),]
tmpDs<-tmpDs[which(tmpDs$route_name==routes[6]),]
ggplot(tmpDs,aes(x=fromtostops,y=avg_time,color=fromtostops,fill=fromtostops))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
library(RMySQL)
library(ggplot2)
mydb = dbConnect(MySQL(), user='bususer', password='Password123', dbname='iubus', host='rdc04.uits.iu.edu',port=3099)
rs = dbSendQuery(mydb, "select route_name,from_name,to_name,concat(from_name,concat('~',to_name)) 'fromtostops',avg(travel_time) 'avg_time',hour(timestmp) 'hour_time' from W_SHED_RUN_FS where travel_flg='Y' and hour_time=1 group by route_name,fromtostops,hour_time order by route_name,hour_time")
data = fetch(rs, n=-1)
dbDisconnect(mydb)
data$hour_time<-as.factor(data$hour_time)
lvl<-levels(data$hour_time)
library(RMySQL)
library(ggplot2)
mydb = dbConnect(MySQL(), user='bususer', password='Password123', dbname='iubus', host='rdc04.uits.iu.edu',port=3099)
rs = dbSendQuery(mydb, "select route_name,from_name,to_name,concat(from_name,concat('~',to_name)) 'fromtostops',avg(travel_time) 'avg_time',hour(timestmp) 'hour_time' from W_SHED_RUN_FS where travel_flg='Y' and hour(timestmp)=1 group by route_name,fromtostops,hour_time order by route_name,hour_time;")
data = fetch(rs, n=-1)
dbDisconnect(mydb)
data$hour_time<-as.factor(data$hour_time)
lvl<-levels(data$hour_time)
for(i in lvl){
tmpDs<-data[which(data$hour_time==i),]
routes<-levels(as.factor(tmpDs$route_name))
for (j in routes){
tmpDs<-data[which(data$hour_time==i && data$route_name==j),]
gg.plot<-ggplot(data,aes(x=fromtostops,y=avg_time,color=fromtostops,fill=fromtostops))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none") + ggtitle(paste("Travel Time Patterns for the route ",j," at ",i,"th Hour of the Day"))+xlab("Stop sequence")+ylab("Average Travel Time")
print(gg.plot)
}}
for (j in routes){
tmpDs<-data[which(data$hour_time==i && data$route_name==j),]
gg.plot<-ggplot(data,aes(x=fromtostops,y=avg_time,color=fromtostops,fill=fromtostops))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none") + ggtitle(paste("Travel Time Patterns for the route ",j," at ",i,"th Hour of the Day"))+xlab("Stop sequence")+ylab("Average Travel Time")
print(gg.plot)
}}
for(i in lvl){
tmpDs<-data[which(data$hour_time==i),]
routes<-levels(as.factor(tmpDs$route_name))
for (j in routes){
tmpDs<-data[which(data$hour_time==i && data$route_name==j),]
gg.plot<-ggplot(data,aes(x=fromtostops,y=avg_time,color=fromtostops,fill=fromtostops))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none") + ggtitle(paste("Travel Time Patterns for the route ",j," at ",i,"th Hour of the Day"))+xlab("Stop sequence")+ylab("Average Travel Time")
print(gg.plot)
}}
gg.plot<-ggplot(tmpDs,aes(x=fromtostops,y=avg_time,color=fromtostops,fill=fromtostops))+stat_summary(fun.y="mean",geom="bar")+theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none") + ggtitle(paste("Travel Time Patterns for the route ",j," at ",i,"th Hour of the Day"))+xlab("Stop sequence")+ylab("Average Travel Time")
x<-c(576,635,558,578,666,580,555,661,651,605,653,575,545,572,594)
y<-c(339,330,281,303,344,307,300,343,336,313,312,274,276,288,296)
?cor
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question_5.R')
setwd("C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs")
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question_5.R')
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question_5.R')
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question_5.R')
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question_5.R')
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question_5.R')
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question_5.R')
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question_5.R')
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question_5.R')
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question_5.R')
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question_5.R')
source('C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 6/R Progs/question3.R')
