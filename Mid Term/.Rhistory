genNos<-expand.grid(1:5,1:5)
plotvar<-cbind(genNos$Var2,genNos$Var1,res)
pos<-plotvar[plotvar[,3]>=0,]
max<-max(pos[,3])
symbols(pos[,1],pos[,2],circles = 0.2*(abs(pos[,3]/(max))),inches = FALSE,xlab="Columns",main="Symbol Plot")
pos<-plotvar[plotvar[,3]<0,]
max<-max(abs(pos[,3]))
symbols(pos[,1],pos[,2],squares = 0.2*(abs(pos[,3]/(max))),inches = FALSE,add = TRUE)
symbols(pos[,1],pos[,2],circles = 0.2*(abs(pos[,3]/(max))),inches = FALSE,xlab="Columns",ylab="Rows",main="Symbol Plot")
C1<-c(22.2,44.5,59.6,73.2,86.8)
C2<-c(10.5,15.5,29.0,36.5,46.2)
C3<-c(3.53,5.76,9.71,14.0,21.1)
C4<-c(1.04,1.98,2.45,3.40,5.40)
C5<-c(.641,.974,1.80,2.60,3.64)
mat<-cbind(C1,C2,C3,C4,C4)
result<-medpolish(mat)
res<-c(result$residuals)
genNos<-expand.grid(1:5,1:5)
plotvar<-cbind(genNos$Var2,genNos$Var1,res)
pos<-plotvar[plotvar[,3]>=0,]
max<-max(pos[,3])
symbols(pos[,1],pos[,2],circles = 0.2*(abs(pos[,3]/(max))),inches = FALSE,xlab="Columns",ylab="Rows",main="Symbol Plot")
pos<-plotvar[plotvar[,3]<0,]
max<-max(abs(pos[,3]))
symbols(pos[,1],pos[,2],squares = 0.2*(abs(pos[,3]/(max))),inches = FALSE,add = TRUE)
symbols(pos[,1],pos[,2],circles = 0.2*(abs(pos[,3]/(max))),inches = FALSE,xlab="Columns",ylab="Rows",main="Symbol Plot",col="blue"
)
C1<-c(22.2,44.5,59.6,73.2,86.8)
C2<-c(10.5,15.5,29.0,36.5,46.2)
C3<-c(3.53,5.76,9.71,14.0,21.1)
C4<-c(1.04,1.98,2.45,3.40,5.40)
C5<-c(.641,.974,1.80,2.60,3.64)
mat<-cbind(C1,C2,C3,C4,C4)
result<-medpolish(mat)
res<-c(result$residuals)
genNos<-expand.grid(1:5,1:5)
plotvar<-cbind(genNos$Var2,genNos$Var1,res)
pos<-plotvar[plotvar[,3]>=0,]
max<-max(pos[,3])
symbols(pos[,1],pos[,2],circles = 0.2*(abs(pos[,3]/(max))),inches = FALSE,xlab="Columns",ylab="Rows",main="Symbol Plot")
pos<-plotvar[plotvar[,3]<0,]
max<-max(abs(pos[,3]))
symbols(pos[,1],pos[,2],squares = 0.2*(abs(pos[,3]/(max))),inches = FALSE,add = TRUE)
result
C1<-c(22.2,44.5,59.6,73.2,86.8)
C2<-c(10.5,15.5,29.0,36.5,46.2)
C3<-c(3.53,5.76,9.71,14.0,21.1)
C4<-c(1.04,1.98,2.45,3.40,5.40)
C5<-c(.641,.974,1.80,2.60,3.64)
mat<-cbind(C1,C2,C3,C4,C4)
result<-medpolish(mat)
res<-c(result$residuals)
genNos<-expand.grid(1:5,1:5)
plotvar<-cbind(genNos$Var2,genNos$Var1,res)
pos<-plotvar[plotvar[,3]>=0,]
max<-max(pos[,3])
symbols(pos[,1],pos[,2],squares = 0.2*(abs(pos[,3]/(max))),inches = FALSE,xlab="Columns",ylab="Rows",main="Symbol Plot")
pos<-plotvar[plotvar[,3]<0,]
max<-max(abs(pos[,3]))
symbols(pos[,1],pos[,2],circles = 0.2*(abs(pos[,3]/(max))),inches = FALSE,add = TRUE)
plot(result)
C1<-c(22.2,44.5,59.6,73.2,86.8)
C2<-c(10.5,15.5,29.0,36.5,46.2)
C3<-c(3.53,5.76,9.71,14.0,21.1)
C4<-c(1.04,1.98,2.45,3.40,5.40)
C5<-c(.641,.974,1.80,2.60,3.64)
mat<-cbind(C1,C2,C3,C4,C4)
result<-medpolish(mat)
res<-c(result$residuals)
genNos<-expand.grid(1:5,1:5)
plotvar<-cbind(genNos$Var2,genNos$Var1,res)
pos<-plotvar[plotvar[,3]>=0,]
max<-sum(abs(pos[,3]))
symbols(pos[,1],pos[,2],squares = 0.2*(abs(pos[,3]/(max))),inches = FALSE,xlab="Columns",ylab="Rows",main="Symbol Plot")
pos<-plotvar[plotvar[,3]<0,]
symbols(pos[,1],pos[,2],circles = 0.2*(abs(pos[,3]/(max))),inches = FALSE,add = TRUE)
C1<-c(22.2,44.5,59.6,73.2,86.8)
C2<-c(10.5,15.5,29.0,36.5,46.2)
C3<-c(3.53,5.76,9.71,14.0,21.1)
C4<-c(1.04,1.98,2.45,3.40,5.40)
C5<-c(.641,.974,1.80,2.60,3.64)
mat<-cbind(C1,C2,C3,C4,C4)
result<-medpolish(mat)
setwd("C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Homework 5")
source("lvalprogs.r")
source("medianPolish.R")
source("rrline.r")
diag.MP <- function(fit){
fit.comp <- matrix(fit$row,ncol=1) %*% matrix(fit$col,nrow=1)/fit$overall
plot(fit.comp, fit$res,xlab="Comparison value",ylab="Residual",cex=0.5)
abline(v=0,h=0,lty=2)
ls <- lm(c(fit$res)~c(fit.comp))
abline(ls,col="red",lty=3)
rr <- run.rrline(fit.comp,fit$res,iter=10)
abline(rr$a, rr$b, col="red")
pwr1 <- 1 - rr$b
pwr2 <- 1 - ls$coef[2]
title("",paste("Approximate power =",format(round(pwr1,2))," or ", format(round(pwr2,2))))
}
symbolPlot<-function(mat){
result<-medpolish(mat)
res<-c(result$residuals)
genNos<-expand.grid(1:5,1:5)
plotvar<-cbind(genNos$Var2,genNos$Var1,res)
pos<-plotvar[plotvar[,3]>=0,]
max<-sum(abs(pos[,3]))
symbols(pos[,1],pos[,2],squares = 0.2*(abs(pos[,3]/(max))),inches = FALSE,xlab="Columns",ylab="Rows",main="Symbol Plot")
pos<-plotvar[plotvar[,3]<0,]
symbols(pos[,1],pos[,2],circles = 0.2*(abs(pos[,3]/(max))),inches = FALSE,add = TRUE)
}
symbolPlot(mat)
diag.MP(result)
result
symbolPlot(mat)
plot(result)
diag.MP(result)
plot(result)
mat<-log(mat)
symbolPlot(mat)
result<-medpolish(mat)
result
diag.MP(result)
pos<-plotvar[plotvar[,3]>=0,]
ti<-function(t){((2*t)-1)/100}
t<-sapply(1:50,ti)
mui<-function(t){t+0.5*exp(-50*(t-0.5)^2)}
mu<-sapply(t,mui)
e<-rnorm(50,0,0.5)
y<-(mu*t)+e
testDS<-as.data.frame(cbind(t,y))
testDS
plot(testDS)
set.seed(1234)
ti<-function(t){((2*t)-1)/100}
t<-sapply(1:50,ti)
mui<-function(t){t+0.5*exp(-50*(t-0.5)^2)}
mu<-sapply(t,mui)
e<-rnorm(50,0,0.5)
y<-(mu*t)+e
testDS<-as.data.frame(cbind(t,y))
plot(testDS)
ksmooth(testDS$t,testDS$y,kernel="normal",bandwidth=0.5)
b<-ksmooth(testDS$t,testDS$y,kernel="normal",bandwidth=0.5)
plot(b$x,b$y,lty=2,add=T)
plot(b$x,b$y,lty=2,add=TRUE)
plot(testDS)
plot(b$x,b$y,lty=2,add=TRUE)
plot(b$x,b$y,lty=2,add=T)
plot(testDS)
lines(density(testDS$y,kernel = "gaussian"))
plot(b$x,b$y,lty=2)
par(mfrow=(1,2))
par(mfrow=c(1,2))
plot(testDS)
plot(b$x,b$y,lty=2)
library(ggplot2)
qplot(t,y,data=testDs)+geom_smooth()
qplot(t,y,data=testDS)+geom_smooth()
plot(b$x,b$y,lty=2,add=T)
qplot(t,y,data=testDS)+geom_smooth()
plot(b$x,b$y,lty=2,add=T)
ksmooth(testDS$t,testDS$y,kernel="normal",bandwidth=0.3)
b<-ksmooth(testDS$t,testDS$y,kernel="normal",bandwidth=0.3)
plot(b$x,b$y,lty=2,add=T)
b<-ksmooth(testDS$t,testDS$y,kernel="normal",bandwidth=0.4)
plot(b$x,b$y,lty=2,add=T)
b<-ksmooth(testDS$t,testDS$y,kernel="normal",bandwidth=0.35)
plot(b$x,b$y,lty=2,add=T)
0.5^2
sqrt(pi)
sqrt(pi)*2
1/3.54
50^(-1/5)
0.45*0.
0.45*0.075
0.035/3.5
(0.45*0.075)/0.00037
c1<-c(25.3,32.1,38.8,25.4)
c2<-c(25.3,29.1,31.0,21.1)
c3<-c(18.2,18.8,19.3,20.3)
c4<-c(18.3,24.3,15.7,24.0)
c5<-c(16.3,19.0,16.8,17.5)
mat<-cbind(c1,c2,c3,c4,c5)
retColMedian<-function(mat){
n<-nrow(mat)
for(i in 1:ncol(mat)){
if(i==1){
med<-cbind(rep(median(mat[,i]),n))
}else{
#print(median(mat[,i]))
med<-cbind(med,rep(median(mat[,i]),n))
}
}
#print(med)
med
}
retRowMedian<-function(mat){
n<-ncol(mat)
for(i in 1:nrow(mat)){
if(i==1){
med<-rbind(rep(median(mat[i,]),n))
}else{
#print(median(mat[,i]))
med<-rbind(med,rep(median(mat[i,]),n))
}
}
#print(med)
med
}
subtractCol<-function(matrix,medianmat){
x<-matrix-medianmat
print(x)
x
}
medianPolishCol<-function(mat,n){
rowEffect<-cbind(c(rep(0,nrow(mat))))
colEffect<-rbind(c(rep(0,ncol(mat))))
mat1<-mat
for(i in 1:n){
col<-retColMedian(mat1)
print(currcolEffect<-rbind(col[1,]))
print(colEffect<-colEffect+currcolEffect)
mat1<-subtractCol(mat1,retColMedian(mat1))
row<-retRowMedian(mat1)
print(currRowEffect<-cbind(row[,1]))
print(rowEffect<-rowEffect+currRowEffect)
mat1<-subtractCol(mat1,retRowMedian(mat1))
}
mat1
}
medianPolishRow<-function(mat,n){
rowEffect<-cbind(c(rep(0,nrow(mat))))
colEffect<-rbind(c(rep(0,ncol(mat))))
mat1<-mat
for(i in 1:n){
row<-retRowMedian(mat1)
print(currRowEffect<-cbind(row[,1]))
print(rowEffect<-rowEffect+currRowEffect)
mat1<-subtractCol(mat1,retRowMedian(mat1))
col<-retColMedian(mat1)
print(currcolEffect<-rbind(col[1,]))
print(colEffect<-colEffect+currcolEffect)
mat1<-subtractCol(mat1,retColMedian(mat1))
}
mat1
}
C1<-c(22.2,44.5,59.6,73.2,86.8)
C2<-c(10.5,15.5,29.0,36.5,46.2)
C3<-c(3.53,5.76,9.71,14.0,21.1)
C4<-c(1.04,1.98,2.45,3.40,5.40)
C5<-c(.641,.974,1.80,2.60,3.64)
mat<-cbind(C1,C2,C3,C4,C4)
result<-medpolish(mat)
result
diag.MP <- function(fit){
fit.comp <- matrix(fit$row,ncol=1) %*% matrix(fit$col,nrow=1)/fit$overall
plot(fit.comp, fit$res,xlab="Comparison value",ylab="Residual",cex=0.5)
abline(v=0,h=0,lty=2)
ls <- lm(c(fit$res)~c(fit.comp))
abline(ls,col="red",lty=3)
rr <- run.rrline(fit.comp,fit$res,iter=10)
abline(rr$a, rr$b, col="red")
pwr1 <- 1 - rr$b
pwr2 <- 1 - ls$coef[2]
title("",paste("Approximate power =",format(round(pwr1,2))," or ", format(round(pwr2,2))))
}
symbolPlot<-function(mat){
result<-medpolish(mat)
res<-c(result$residuals)
genNos<-expand.grid(1:5,1:5)
plotvar<-cbind(genNos$Var2,genNos$Var1,res)
pos<-plotvar[plotvar[,3]>=0,]
max<-sum(abs(pos[,3]))
symbols(pos[,1],pos[,2],squares = 0.2*(abs(pos[,3]/(max))),inches = FALSE,xlab="Columns",ylab="Rows",main="Symbol Plot")
pos<-plotvar[plotvar[,3]<0,]
symbols(pos[,1],pos[,2],circles = 0.2*(abs(pos[,3]/(max))),inches = FALSE,add = TRUE)
}
symbolPlot(mat)
rrline1 <- function(x,y) {
n3 <- floor((length(x)+1.99)/3)
x.order <- order(x)
medxL <- median(x[x.order][1:n3])
medxR <- median(rev(x[x.order])[1:n3])
medyL <- median(y[x.order][1:n3])
medyR <- median(rev(y[x.order])[1:n3])
slope1 <- (medyR - medyL)/(medxR - medxL)
int1 <- median(y - slope1 * x)
# print(c(paste("Intercept = ", format(round(int1,5))),
#   paste("Slope = ",format(round(slope1,5)))))
newy <- y - slope1*x - int1
sumres <- sum(abs(newy))
list(a=int1, b=slope1, sumres = sumres, res=newy)
}
run.rrline <- function(x,y,iter=5) {
out.coef <- matrix(0,iter,3)
newy <- y
for (i in 1:iter) {
rr <- rrline1(x,newy)
out.coef[i,] <- c(rr$a,rr$b,rr$sumres)
newy <- rr$res
}
dimnames(out.coef) <- list(format(1:iter),c("a","b","|res|"))
aa <- sum(out.coef[,1])
bb <- sum(out.coef[,2])
cc <- sum(abs(y - aa - bb*x))
res <- y - aa - bb*x
out.coef <- rbind(out.coef,c(aa,bb,cc))
print(round(out.coef,5))
list(a = aa, b = bb, res = res, coef=out.coef)
}
rrline2 <- function(x,y) {
n <- length(x)
n3 <- floor((length(x)+1.99)/3)
x.order <- order(x)
medxL <- median(x[x.order][1:n3])
medxR <- median(rev(x[x.order])[1:n3])
medyL <- median(y[x.order][1:n3])
medyR <- median(rev(y[x.order])[1:n3])
medxM <- median(x[x.order][(n3+1):(n-n3)])
medyM <- median(y[x.order][(n3+1):(n-n3)])
slope1 <- (medyR - medyL)/(medxR - medxL)
int1 <- median(y - slope1 * x)
int2 <- mean(c(medyL,medyM,medyR) - slope1*c(medxL,medxM,medxR))
newy <- y - slope1*x - int1
sumres <- sum(abs(newy))
newy2 <- y - slope1*x - int2
sumres2 <- sum(abs(newy2))
list(a=int1, a2=int2, b=slope1, sumres = sumres, sumres2=sumres2, res=newy2)
}
run.rrline2 <- function(x,y,iter=5) {
out.coef <- matrix(0,iter,3)
newy <- y
for (i in 1:iter) {
rr <- rrline2(x,newy)
out.coef[i,] <- c(rr$a2,rr$b,rr$sumres2)
newy <- rr$res
}
dimnames(out.coef) <- list(format(1:iter),c("a","b","|res|"))
aa <- sum(out.coef[,1])
bb <- sum(out.coef[,2])
cc <- sum(abs(y - aa - bb*x))
res <- y - aa - bb*x
out.coef <- rbind(out.coef,c(aa,bb,cc))
print(round(out.coef,5))
list(a = aa, b = bb, res = res, coef=out.coef)
}
plot(result)
diag.MP(result)
mat<-log(mat)
symbolPlot(mat)
result<-medpolish(mat)
result
diag.MP(result)
b<-ksmooth(testDS$t,testDS$y,kernel="normal",bandwidth=0.35)
set.seed(1234)
ti<-function(t){((2*t)-1)/100}
t<-sapply(1:50,ti)
mui<-function(t){t+0.5*exp(-50*(t-0.5)^2)}
mu<-sapply(t,mui)
e<-rnorm(50,0,0.5)
y<-(mu*t)+e
testDS<-as.data.frame(cbind(t,y))
b<-ksmooth(testDS$t,testDS$y,kernel="normal",bandwidth=0.35)
plot(b$x,b$y,lty=2,add=T)
wt3<-c(143,-184,182,-110,1017,986,1010,1001,-111,-60,-151,-111,1024,1031,1028)
warnings()
summary(wt3)
stem(wt3)
stem(wt3,2)
stem(wt3,3)
stem(wt3,2)
library(aplpack)
stem.leaf(wt3)
stem.leaf(wt3,2)
stem.leaf(wt3)
boxplot(wt3)
setwd("C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Mid Term")
read.csv("smoothing.csv")
mu<-read.csv("smoothing.csv")
mu<-read.csv("smoothing.csv",header = FALSE)
setwd("C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Mid Term")
mu<-read.csv("smoothing.csv",header = FALSE)
x<-mu$V1
y<-mu$V2
mu = function(t){t + 0.5 *exp(-50*(t-0.5)^2)}
curve(mu(x),0,1)
points(x,y)
t=ksmooth(x,y,kernel="normal",bandwidth=lambda)
t=ksmooth(x,y,kernel="normal",bandwidth=0.5)
lines(x = t$y)
?lines
lines(t$y,0,1)
lines(t$x,t$y)
curve(mu(x),0,1,col="red")
t=ksmooth(x,y,kernel="normal",bandwidth=0.3)
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.2)
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.1)
lines(t$x,t$y)
curve(mu(x),0,1,col="red")
t=ksmooth(x,y,kernel="normal",bandwidth=0.15)
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.2)
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.3)
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.25)
lines(t$x,t$y)
curve(mu(x),0,1,col="red")
points(x,y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.25)
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.3)
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.5)
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.15)
lines(t$x,t$y)
mu = function(t){t + 0.5 *exp(-50*(t-0.5)^2)}
curve(mu(x),0,1,col="red")
points(x,y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.15)
lines(t$x,t$y)
curve(mu(x),0,1,col="red")
points(x,y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.5,col="yellow")
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.3,col="green")
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.25,col="blue")
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.15)
lines(t$x,t$y)
curve(mu(x),0,1,col="red")
points(x,y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.5,col="yellow")
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.3,col="green")
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.25,col="blue")
lines(t$x,t$y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.15)
lines(t$x,t$y)
curve(mu(x),0,1,col="red")
points(x,y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.5)
lines(t$x,t$y,col="yellow")
t=ksmooth(x,y,kernel="normal",bandwidth=0.3)
lines(t$x,t$y,col="green")
t=ksmooth(x,y,kernel="normal",bandwidth=0.25)
lines(t$x,t$y,col="blue")
t=ksmooth(x,y,kernel="normal",bandwidth=0.15)
lines(t$x,t$y)
setwd("C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Mid Term")
mu<-read.csv("smoothing.csv",header = FALSE)
x<-mu$V1
y<-mu$V2
mu = function(t){t + 0.5 *exp(-50*(t-0.5)^2)}
curve(mu(x),0,1,col="red")
points(x,y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.5)
lines(t$x,t$y,col="violet")
t=ksmooth(x,y,kernel="normal",bandwidth=0.3)
lines(t$x,t$y,col="green")
t=ksmooth(x,y,kernel="normal",bandwidth=0.25)
lines(t$x,t$y,col="blue")
t=ksmooth(x,y,kernel="normal",bandwidth=0.15)
lines(t$x,t$y)
lines(t$x,t$y,col="violet")
text(t$x)
t=ksmooth(x,y,kernel="normal",bandwidth=0.5)
lines(t$x,t$y,col="violet")
text(t$x[1],t$y[1],"Test")
setwd("C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Mid Term")
mu<-read.csv("smoothing.csv",header = FALSE)
x<-mu$V1
y<-mu$V2
mu = function(t){t + 0.5 *exp(-50*(t-0.5)^2)}
curve(mu(x),0,1,col="red")
points(x,y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.5)
lines(t$x,t$y,col="violet")
text(t$x[1],t$y[1],"Bandwidth = 0.5")
t=ksmooth(x,y,kernel="normal",bandwidth=0.3)
lines(t$x,t$y,col="green")
text(t$x[5],t$y[5],"Bandwidth = 0.3")
t=ksmooth(x,y,kernel="normal",bandwidth=0.25)
lines(t$x,t$y,col="blue")
text(t$x[30],t$y[30],"Bandwidth = 0.25")
t=ksmooth(x,y,kernel="normal",bandwidth=0.15)
lines(t$x,t$y)
text(t$x[40],t$y[40],"Bandwidth = 0.15")
setwd("C:/Users/Ganesh/Google Drive/Courses/STAT S 670/Mid Term")
mu<-read.csv("smoothing.csv",header = FALSE)
x<-mu$V1
y<-mu$V2
mu = function(t){t + 0.5 *exp(-50*(t-0.5)^2)}
curve(mu(x),0,1,col="red")
points(x,y)
t=ksmooth(x,y,kernel="normal",bandwidth=0.5)
lines(t$x,t$y,col="violet")
text(t$x[1],t$y[1],"Bandwidth = 0.5",col="violet")
t=ksmooth(x,y,kernel="normal",bandwidth=0.3)
lines(t$x,t$y,col="green")
text(t$x[20],t$y[20],"Bandwidth = 0.3",col="green")
t=ksmooth(x,y,kernel="normal",bandwidth=0.25)
lines(t$x,t$y,col="blue")
text(t$x[30],t$y[30],"Bandwidth = 0.25",col="blue")
t=ksmooth(x,y,kernel="normal",bandwidth=0.15)
lines(t$x,t$y)
text(t$x[40],t$y[40],"Bandwidth = 0.15")
